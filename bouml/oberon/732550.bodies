class Query_snapshot_State
!!!964742.cpp!!!	_upper(inout stm : Coinbase) : Coinbase::AnyState
  return &stm._coinbase_state._engage_state._subscribed_state._snapshot_state;
!!!967814.cpp!!!	create(inout stm : Coinbase) : void
	_doentry(stm);
!!!967942.cpp!!!	_doentry(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
  std::cout << "DEBUG : execute entry behavior of .Coinbase.Engage.Subscribed.Snapshot.Query snapshot" << std::endl;
#endif
namespace http = boost::beast::http;
#ifdef DEBUG
std::cout << "HTTP GET " << stm.https_req_.target() << "\n";
#endif
http::async_write(
    *stm.https_, stm.https_req_,
    boost::asio::bind_executor(
        *stm.rtc_, [&stm](const boost::system::error_code &ec,
                          std::size_t bytes_transferred) {
          if (ec) {
            stm.ec_ = ec;
            stm.error_message_ = ec.message();
            stm.failure();
          } else {
            stm.success();
          }
        }));
!!!1028870.cpp!!!	success(inout stm : Coinbase) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbase_state._engage_state._subscribed_state._snapshot_state._read_snapshot_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase.Engage.Subscribed.Snapshot.Read Snapshot" << std::endl;
#endif
    stm._coinbase_state._engage_state._subscribed_state._snapshot_state._read_snapshot_state.create(stm);
  }
