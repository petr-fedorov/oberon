class AnyState
!!!1485446.cpp!!!	endOfEpisode(inout stm : EraMerger) : void
  AnyState * st = _upper(stm);

  if (st != 0)
    st->endOfEpisode(stm);
#ifdef VERBOSE_STATE_MACHINE
  else
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "transition endOfEpisode not expected";
#endif
#endif
!!!1485830.cpp!!!	created(inout stm : EraMerger) : void
  AnyState * st = _upper(stm);

  if (st != 0)
    st->created(stm);
#ifdef VERBOSE_STATE_MACHINE
  else
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "transition created not expected";
#endif
#endif
!!!1486342.cpp!!!	era(inout stm : EraMerger) : void
  AnyState * st = _upper(stm);

  if (st != 0)
    st->era(stm);
#ifdef VERBOSE_STATE_MACHINE
  else
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "transition era not expected";
#endif
#endif
!!!1486726.cpp!!!	reset(inout stm : EraMerger) : void
  AnyState * st = _upper(stm);

  if (st != 0)
    st->reset(stm);
#ifdef VERBOSE_STATE_MACHINE
  else
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "transition reset not expected";
#endif
#endif
!!!1487110.cpp!!!	cancelled(inout stm : EraMerger) : void
  AnyState * st = _upper(stm);

  if (st != 0)
    st->cancelled(stm);
#ifdef VERBOSE_STATE_MACHINE
  else
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "transition cancelled not expected";
#endif
#endif
!!!1487494.cpp!!!	filled(inout stm : EraMerger) : void
  AnyState * st = _upper(stm);

  if (st != 0)
    st->filled(stm);
#ifdef VERBOSE_STATE_MACHINE
  else
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "transition filled not expected";
#endif
#endif
!!!1488006.cpp!!!	changed(inout stm : EraMerger) : void
  AnyState * st = _upper(stm);

  if (st != 0)
    st->changed(stm);
#ifdef VERBOSE_STATE_MACHINE
  else
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "transition changed not expected";
#endif
#endif
