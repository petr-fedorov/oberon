class Feeder
!!!1213702.cpp!!!	Feeder(in ioc : io_context_SP, in product : string, in exhausted_after : int)
d_->product_ = product;
d_->ioc_ = ioc;
_machine_name = "CoinbaseFeeder - ";

!!!1335046.cpp!!!	subscribe() : void
using namespace boost::property_tree;
ptree h, p, c, products, channels;
p.put("", d_->product_);
c.put("", "full");

products.push_back(std::make_pair("", p));
channels.push_back(std::make_pair("", c));

using namespace boost::property_tree;
ptree tree;
std::ostringstream request;
tree.put("type", "subscribe");

tree.add_child("product_ids", products);
tree.add_child("channels", channels);

write_json(request, tree, false);
#ifndef NDEBUG
BOOST_LOG_TRIVIAL(debug) << "Request: " << request.str();
#endif
d_->ws_->async_write(
    boost::asio::buffer(request.str()),
    boost::asio::bind_executor(*d_->strand_,
                               [this](const boost::system::error_code &ec,
                                      std::size_t bytes_transferred) {
     boost::ignore_unused(bytes_transferred);
     if (ec) {
      this->d_->ec_ = ec;
      this->d_->error_message_ = ec.message();
      BOOST_LOG_TRIVIAL(warning) << "Subscribe " << ec.message();
      this->failure();
     } else
      this->success();
    }));

!!!1336198.cpp!!!	isControlMessage() : bool
return (d_->tree_->get<std::string>("type") == "subscriptions");

!!!1336326.cpp!!!	isGoodSeqNum() : bool
return !(d_->last_sequence_ && d_->tree_->get<long long>("sequence") != d_->last_sequence_ + 1);

!!!1336582.cpp!!!	reportReceived() : void
d_->last_sequence_ = d_->tree_->get<long long>("sequence");
if(d_->rh_) d_->rh_(std::move(d_->tree_));



