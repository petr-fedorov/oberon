class Feeder
!!!1335430.cpp!!!	Feeder(in ioc : io_context_SP, in product : string, in exhausted_after : int)
_machine_name = "BitstampFeeder - ";

!!!1335558.cpp!!!	subscribe() : void
subscribeTrades();
!!!1335686.cpp!!!	subscribeTrades() : void
using namespace boost::property_tree;
ptree tree, c;
std::ostringstream request;
tree.put("event", "bts:subscribe");
c.put("channel", "live_trades_" + d_->product_);
tree.add_child("data", c);
write_json(request, tree, false);

#ifndef NDEBUG
BOOST_LOG_TRIVIAL(debug) << "Request: " << request.str();
#endif
d_->ws_->async_write(
    boost::asio::buffer(request.str()),
    boost::asio::bind_executor(*d_->strand_,
                               [this](const boost::system::error_code &ec,
                                      std::size_t bytes_transferred) {
     boost::ignore_unused(bytes_transferred);
     if (ec) {
      this->d_->ec_ = ec;
      this->d_->error_message_ = ec.message();
      BOOST_LOG_TRIVIAL(warning) << "Subscribe trades " << ec.message();
      this->failure();
     } else
      this->subscribeLiveOrders();
    }));

!!!1335814.cpp!!!	subscribeLiveOrders() : void
using namespace boost::property_tree;
ptree tree, c;
std::ostringstream request;
tree.put("event", "bts:subscribe");
c.put("channel", "live_orders_" + d_->product_);
tree.add_child("data", c);
write_json(request, tree, false);

#ifndef NDEBUG
BOOST_LOG_TRIVIAL(debug) << "Request: " << request.str();
#endif
d_->ws_->async_write(
    boost::asio::buffer(request.str()),
    boost::asio::bind_executor(*d_->strand_,
                               [this](const boost::system::error_code &ec,
                                      std::size_t bytes_transferred) {
     boost::ignore_unused(bytes_transferred);
     if (ec) {
      this->d_->ec_ = ec;
      this->d_->error_message_ = ec.message();
      BOOST_LOG_TRIVIAL(warning) << "Subscribe LiveOrders " << ec.message();
      this->failure();
     } else
      this->success();
    }));

!!!1336710.cpp!!!	reportReceived() : void
if(d_->rh_) d_->rh_(std::move(d_->tree_));



!!!1336838.cpp!!!	isGoodSeqNum() : bool
return true;
!!!1336966.cpp!!!	isControlMessage() : bool
auto event = d_->tree_->get<std::string>("event");
return !(event == "order_created" || event == "order_changed" || event == "order_deleted" || event == "trade");
   

