class Engage_State
!!!965510.cpp!!!	create(inout stm : Coinbase) : void
  _doentry(stm);
  {
    stm._set_currentState(stm._coinbase_state._engage_state._initialize_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .Coinbase.Engage.Initialize";
#endif
    stm._coinbase_state._engage_state._initialize_state.create(stm);
  }
!!!965766.cpp!!!	_upper(inout stm : Coinbase) : Coinbase::AnyState
  return &stm._coinbase_state;
!!!974982.cpp!!!	stop(inout stm : Coinbase) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._coinbase_state._engage_state._doexit(stm);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute activity of transition stop";
#endif
if(!stm.error_message_.empty())
  BOOST_LOG_TRIVIAL(error) << stm.error_message_;
    stm._set_currentState(stm._coinbase_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .Coinbase";
#endif
      stm._final();
  }
!!!990726.cpp!!!	_doentry(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute entry behavior of .Coinbase.Engage";
#endif
stm.signal_set_->async_wait(boost::asio::bind_executor(
    *stm.rtc_, [&stm](const boost::system::error_code &ec, int signal_number) {
      if (!ec) {
        BOOST_LOG_TRIVIAL(info) << "\nTermination requested ...";
        stm.stop();
      }
    }));
!!!1003782.cpp!!!	_doexit(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute exit behavior of .Coinbase.Engage";
#endif
stm.signal_set_->cancel();
