class Engage_State
!!!965510.cpp!!!	create(inout stm : Coinbase) : void
  _doentry(stm);
  {
    stm._set_currentState(stm._coinbase_state._engage_state._initialize_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase.Engage.Initialize" << std::endl;
#endif
    stm._coinbase_state._engage_state._initialize_state.create(stm);
  }
!!!965638.cpp!!!	error(inout stm : Coinbase) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._coinbase_state._engage_state._doexit(stm);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : execute activity of transition error" << std::endl;
#endif
std::cerr << stm.ec_.message() << "\n";
    stm._set_currentState(stm._coinbase_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase" << std::endl;
#endif
      stm._final();
  }
!!!965766.cpp!!!	_upper(inout stm : Coinbase) : Coinbase::AnyState
  return &stm._coinbase_state;
!!!974982.cpp!!!	stop(inout stm : Coinbase) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._coinbase_state._engage_state._doexit(stm);
    stm._set_currentState(stm._coinbase_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase" << std::endl;
#endif
      stm._final();
  }
!!!975110.cpp!!!	_doexit(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
  std::cout << "DEBUG : execute exit behavior of .Coinbase.Engage" << std::endl;
#endif
stm.ioc_->stop();
!!!990726.cpp!!!	_doentry(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
  std::cout << "DEBUG : execute entry behavior of .Coinbase.Engage" << std::endl;
#endif
stm.signal_set_->async_wait([&stm](const boost::system::error_code &ec,
                                   int signal_number) {
  if (!ec) {
    std::cout << "Got signal!\n";
    stm.stop();
  }
});
