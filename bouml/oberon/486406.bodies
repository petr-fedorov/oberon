class Reconstructor
!!!576134.cpp!!!	extract(in tree : ptree [1]) : Token [1..*]
using namespace date;
using namespace std;
Token output;
try {
  string type = tree.get<string>("type");
  if (type == "elapsed")
    output = boost::make_unique<Elapsed>(toTimestamp(tree.get<string>("time")));
  else if (type == "received")
    output = boost::make_unique<CoinbaseReceived>(tree, *this);
  else if (type == "open")
    output = boost::make_unique<CoinbaseOpen>(tree, *this);
  else if (type == "done") {
    if (tree.get<string>("reason") == "canceled")
      output = boost::make_unique<CoinbaseDoneCancelled>(tree, *this);
    else
      output = boost::make_unique<CoinbaseDoneFilled>(tree, *this);
  } else if (type == "match") {
    output = boost::make_unique<CoinbaseMatch>(tree, *this);
  } else if (type == "change") {
    output = boost::make_unique<CoinbaseChanged>(tree, *this);
  } else if (type == "era") {
    output = boost::make_unique<CoinbaseEra>(tree);
  } else if (type == "reset") {
    output = boost::make_unique<Reset>();
  }
  if (!output) {
    std::stringstream s;
    boost::property_tree::write_json(s, tree, false);
    BOOST_LOG_TRIVIAL(error) << "Unable to extract: " << s.str();
  }
} catch (const std::exception &e) {
  std::stringstream s;
  boost::property_tree::write_json(s, tree, false);
  std::string msg{s.str()};
  BOOST_LOG_TRIVIAL(error) << "Exception " << e.what() << " while processing "
                           << s.str();
  throw;
};
return output;
