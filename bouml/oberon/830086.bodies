class Read_snapshot_State
!!!1166726.cpp!!!	success(inout stm : Snapshot) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._snapshot_state._obtain_state._parse_snapshot_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .Snapshot.Obtain.Parse snapshot";
#endif
    stm._snapshot_state._obtain_state._parse_snapshot_state.create(stm);
  }
!!!1166854.cpp!!!	create(inout stm : Snapshot) : void
	_doentry(stm);
!!!1166982.cpp!!!	_doentry(inout stm : Snapshot) : void
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute entry behavior of .Snapshot.Obtain.Read snapshot";
#endif
boost::beast::http::async_read(
    *stm.https_, stm.https_buffer_, stm.https_res_,
    boost::asio::bind_executor(*stm.strand_,
                               [&stm](const boost::system::error_code &ec,
                                      std::size_t bytes_transferred) {
                                 if (ec) {
                                   stm.ec_ = ec;
                                   stm.error_message_ = ec.message();
                                   BOOST_LOG_TRIVIAL(warning)
                                       << stm.error_message_;
                                   stm.failure();
                                 } else
                                   stm.success();
                               }));
!!!1167110.cpp!!!	_upper(inout stm : Snapshot) : Snapshot::AnyState
  return &stm._snapshot_state._obtain_state;
