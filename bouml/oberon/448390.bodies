class OrderEvent
!!!1475078.cpp!!!	clone() : OrderEvent::OrderEvent_UP
return boost::make_unique<OrderEvent>(*this);

!!!650374.cpp!!!	toString() : string
std::stringstream buf;
buf << Message::toString();
buf << " ";
if (order_id_ == kNaOrderId)
  buf << "NA";
else
  buf << order_id_;
buf << " ";
if (!ordinal_)
  buf << "NA";
else
  buf << ordinal_;
buf << " ";
if (side_ == kBid)
  buf << "B";
else if (side_ == kAsk)
  buf << "A";
else
  buf << "NA";
buf << " ";
if (std::isnan(price_))
  buf << "NA";
else
  buf << price_;
buf << " ";
if (std::isnan(remaining_size_))
  buf << "NA";
else
  buf << remaining_size_;
buf << " ";
if (std::isnan(change_size_))
  buf << "NA";
else
  buf << change_size_;
buf << " ";
if (state_ == OrderState::kActive) {
  buf << "a";
} else if (state_ == OrderState::kFinished) {
  buf << "f";
} else {
  buf << "na";
}
buf << " ";
  buf << (deleted() ? " DELETED " : "");
return buf.str();
!!!1285510.cpp!!!	accept(in mh : TokenHandler [1]) : bool
if(isOrderCreated())
  return mh->created();
if(isOrderCancelled())
  return mh->cancelled();
if(isOrderChanged())
  return mh->changed();
if(isOrderFilled())
  return mh->filled();
return mh->orderEvent();
!!!1263238.cpp!!!	maker() : OrderEvent::OrderId
return order_id_;
!!!1263366.cpp!!!	maker(in order_id : OrderEvent::OrderId) : void
order_id_ = order_id;
!!!1263494.cpp!!!	remaining() : OrderEvent::Volume
return remaining_size_;
!!!1263622.cpp!!!	remaining(in remaining_size : OrderEvent::Volume) : void
if(remaining_size < base_increment_ && (base_increment_-remaining_size)/base_increment_ > 0.01) {
  // only if remaining_size is significantly less than base_increment_ we assume that it is
  // due to rounding errors. Otherwise we save the provided value of remaining_size
  remaining_size_ = 0.0;
  if(isOrderFilled())
    state_ = kFinished;
}
else {
  remaining_size_ = remaining_size;
  if(isOrderFilled())
    state_ = kActive;
}
!!!1263750.cpp!!!	change() : OrderEvent::Volume
return change_size_;
!!!1263878.cpp!!!	change(in change_size : OrderEvent::Volume) : void
if (std::abs(change_size) < base_increment_)
  change_size_ = 0.0;
else
  change_size_ = change_size;
!!!1264006.cpp!!!	ordinal() : OrderEvent::Ordinal
return ordinal_;
!!!1264134.cpp!!!	ordinal(in ordinal : OrderEvent::Ordinal) : void
ordinal_ = ordinal;
!!!1264262.cpp!!!	price() : OrderEvent::Price
return price_;
!!!1447046.cpp!!!	price(in price : OrderEvent::Price) : void
price_ = price; 
!!!1264390.cpp!!!	heard() : Message::Timestamp
return heard_;
!!!1446790.cpp!!!	heard(in timestamp : Message::Timestamp) : void
heard_ = timestamp;
!!!1270918.cpp!!!	side() : OrderEvent::BookSide
return side_;
!!!1446918.cpp!!!	side(in side : OrderEvent::BookSide) : void
side_ = side;
!!!1277830.cpp!!!	taker() : OrderEvent::OrderId
return taker_order_id_;
!!!1447302.cpp!!!	taker(in taker_id : OrderEvent::OrderId) : void
taker_order_id_ = taker_id;
!!!1277958.cpp!!!	trade() : OrderEvent::TradeId
return trade_id_;
!!!1447174.cpp!!!	trade(in trade_id : OrderEvent::TradeId) : void
trade_id_ = trade_id;
!!!1278214.cpp!!!	state() : OrderEvent::OrderState
return state_;
!!!1292678.cpp!!!	state(in state : OrderEvent::OrderState) : void
state_ = state;
!!!1307910.cpp!!!	baseIncrement(in base_increment : OrderEvent::Volume) : void
base_increment_ = base_increment;
!!!1351046.cpp!!!	source() : string
return source_;
!!!1552646.cpp!!!	source(in src : string) : void
source_ = src;
!!!1496966.cpp!!!	isSameCommitment(in other : OrderEvent) : bool
return price_ == other.price_ && std::abs(remaining_size_ - other.remaining_size_) < base_increment_;
!!!1538950.cpp!!!	isOrderCreated() : bool
return ordinal() == 1 && state() != kFinished && !trade();
!!!1539078.cpp!!!	isOrderChanged() : bool
return ordinal() != 1 && state() != kFinished && !trade();
!!!1539206.cpp!!!	isOrderCancelled() : bool
return state() == kFinished && !trade();
!!!1539334.cpp!!!	isOrderFilled() : bool
return trade();
