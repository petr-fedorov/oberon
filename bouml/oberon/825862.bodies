class Snapshot
!!!1143302.cpp!!!	Snapshot()
  _current_state = 0;
!!!1149318.cpp!!!	Snapshot(in ioc : io_context_SP, in host : string, in port : string, in target : string)
d_->ioc_ = ioc;
d_->strand_ = boost::make_unique<boost::asio::io_context::strand>(*ioc);

namespace http = boost::beast::http;
d_->req_.method(http::verb::get);
d_->req_.target(target);
d_->req_.set(http::field::host, d_->host_);
d_->req_.set(http::field::user_agent, BOOST_BEAST_VERSION_STRING);
_machine_name = "Snapshot - ";
!!!1143558.cpp!!!	create() : bool
if (_current_state == 0)
  (_current_state = &(*this)._snapshot_state)->create(*this);
return (_current_state != 0);
!!!1143942.cpp!!!	success() : bool
  if (_current_state != 0) {
 #ifdef VERBOSE_STATE_MACHINE
Snapshot & stm =*this;
 #endif
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "fire trigger success";
#endif
_current_state->success(*this);
  }
  return (_current_state != 0);
!!!1144838.cpp!!!	failure() : bool
  if (_current_state != 0) {
 #ifdef VERBOSE_STATE_MACHINE
Snapshot & stm =*this;
 #endif
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "fire trigger failure";
#endif
_current_state->failure(*this);
  }
  return (_current_state != 0);
!!!1148934.cpp!!!	doActivity() : void
  _current_state->_do(*this);
!!!1149062.cpp!!!	_set_currentState(inout st : Snapshot::AnyState) : void
  _current_state = &st;
!!!1149190.cpp!!!	_final() : void
  _current_state = 0;
 #ifdef VERBOSE_STATE_MACHINE
Snapshot & stm =*this;
 #endif
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "final state reached";
#endif
!!!1248006.cpp!!!	registerHandlers(in f : FailureHandler, in r : ReceivedHandler) : void
d_->fh_ = f;
d_->rh_ = r;

!!!1517702.cpp!!!	postEvent(inout event : Snapshot::SnapshotEventFn) : void
_post(std::bind(event, shared_from_this()));

!!!1517958.cpp!!!	_post(inout handler : std::function<void()>) : void
boost::asio::post(*d_->strand_,handler);
!!!1255814.cpp!!!	stop() : bool
  if (_current_state != 0) {
 #ifdef VERBOSE_STATE_MACHINE
Snapshot & stm =*this;
 #endif
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "fire trigger stop";
#endif
_current_state->stop(*this);
  }
  return (_current_state != 0);
