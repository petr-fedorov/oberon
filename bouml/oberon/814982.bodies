class Handshake_SSL_State
!!!1107974.cpp!!!	success(inout stm : CoinbaseReceiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbasereceiver_state._engage_state._subscribed_state._snapshot_state._query_snapshot_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .CoinbaseReceiver.Engage.Subscribed.Snapshot.Query snapshot";
#endif
    stm._coinbasereceiver_state._engage_state._subscribed_state._snapshot_state._query_snapshot_state.create(stm);
  }
!!!1108102.cpp!!!	create(inout stm : CoinbaseReceiver) : void
	_doentry(stm);
!!!1108230.cpp!!!	_doentry(inout stm : CoinbaseReceiver) : void
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute entry behavior of .CoinbaseReceiver.Engage.Subscribed.Snapshot.Handshake SSL";
#endif
stm.https_->async_handshake(
    boost::asio::ssl::stream_base::client,
    boost::asio::bind_executor(*stm.rtc_,
                               [&stm](const boost::system::error_code &ec) {
                                 if (ec) {
                                   stm.ec_ = ec;
                                   stm.error_message_ = ec.message();
                                   stm.failure();
                                 } else {
                                   stm.success();
                                 }
                               }));
!!!1108358.cpp!!!	_upper(inout stm : CoinbaseReceiver) : CoinbaseReceiver::AnyState
  return &stm._coinbasereceiver_state._engage_state._subscribed_state._snapshot_state;
