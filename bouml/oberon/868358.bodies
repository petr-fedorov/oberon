class Engaging_Feeder_State
!!!1237126.cpp!!!	success(inout stm : Receiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute activity of transition success";
#endif
BOOST_LOG_TRIVIAL(info) << stm._machine_name << "Feeder engaged successfully.";
    stm._set_currentState(stm._receiver_state._engage_state._feeder_engaged_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .Receiver.Engage.Feeder Engaged";
#endif
    stm._receiver_state._engage_state._feeder_engaged_state.create(stm);
  }
!!!1237254.cpp!!!	failure(inout stm : Receiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._receiver_state._engage_state._doexit(stm);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute activity of transition failure";
#endif
BOOST_LOG_TRIVIAL(error) << stm._machine_name << "Couldn't engage Feeder, exiting. " << stm.d_->error_message_; 
stm.exit_code_ = EXIT_FAILURE;
    stm._set_currentState(stm._receiver_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .Receiver";
#endif
      stm._final();
  }
!!!1237382.cpp!!!	create(inout stm : Receiver) : void
	_doentry(stm);
!!!1237510.cpp!!!	_doentry(inout stm : Receiver) : void
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute entry behavior of .Receiver.Engage.Engaging Feeder";
#endif
boost::asio::post(
    boost::asio::bind_executor(*stm.d_->processing_strand_, [&stm]() {
      boost::property_tree::ptree reset;
      reset.put<std::string>("type", "reset");  // Coinbase
      reset.put<std::string>("event", "reset"); // Bitstamp
      try {
        if (stm.d_->process(reset))
          return;
      } catch (...) {
      }
      stm.postEvent(&Receiver::failure);
    }));
stm.d_->feeder_->create();
!!!1237638.cpp!!!	_upper(inout stm : Receiver) : Receiver::AnyState
  return &stm._receiver_state._engage_state;
