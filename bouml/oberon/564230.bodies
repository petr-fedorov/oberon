class EventCounter
!!!722566.cpp!!!	created() : bool
OrderEvent *em = dynamic_cast<OrderEvent *>(received_.get());
eventNumbers_[em->maker()] = 1;
em->ordinal(1);
output_.push_back(std::move(received_));
return true;
!!!722694.cpp!!!	canceled() : bool
OrderEvent *em = dynamic_cast<OrderEvent *>(received_.get());

try {
  em->ordinal(eventNumbers_.at(em->maker()) + 1);
  eventNumbers_.erase(em->maker());
} catch (const std::out_of_range &) {
  em->deleted(true);
}
output_.push_back(std::move(received_));
return true;
!!!722822.cpp!!!	filled() : bool
OrderEvent *em = dynamic_cast<OrderEvent *>(received_.get());
try {
  em->ordinal(eventNumbers_.at(em->maker()) + 1);
  if (em->state() == OrderEvent::OrderState::kActive)
    eventNumbers_[em->maker()] = em->ordinal();
  else
    eventNumbers_.erase(em->maker());
} catch (const std::out_of_range &) {
  em->deleted(true);
}
output_.push_back(std::move(received_));
return true;
