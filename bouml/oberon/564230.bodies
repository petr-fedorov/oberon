class EventNumberGenerator
!!!722438.cpp!!!	exchangeMessage() : bool
ExchangeMessage *em = dynamic_cast<ExchangeMessage *>(received_.get());
#ifdef VERBOSE_STATE_MACHINE
BOOST_LOG_TRIVIAL(debug) << "exchangeMessage " << em->toString();
#endif
try {
  em->setEventNo(eventNumbers_.at(em->getOrderId()) + 1);
  eventNumbers_[em->getOrderId()] = em->getEventNo();
} catch (const std::out_of_range &) {
}
output_.push_back(std::move(received_));
return true;
!!!722566.cpp!!!	created() : bool
ExchangeMessage *em = dynamic_cast<ExchangeMessage *>(received_.get());
#ifdef VERBOSE_STATE_MACHINE
BOOST_LOG_TRIVIAL(debug) << "created " << em->toString(); 
#endif
eventNumbers_[em->getOrderId()] = 1;
em->setEventNo(1);
output_.push_back(std::move(received_));
return true;
!!!722694.cpp!!!	canceled() : bool
ExchangeMessage *em = dynamic_cast<ExchangeMessage *>(received_.get());
#ifdef VERBOSE_STATE_MACHINE
BOOST_LOG_TRIVIAL(debug) << "fullyCanceled " << em->toString(); 
#endif

try {
  em->setEventNo(eventNumbers_.at(em->getOrderId()) + 1);
  eventNumbers_.erase(em->getOrderId());
  output_.push_back(std::move(received_));
} catch (const std::out_of_range &) {
  received_.release();
}
return true;
!!!722822.cpp!!!	filled() : bool
ExchangeMessage *em = dynamic_cast<ExchangeMessage *>(received_.get());
#ifdef VERBOSE_STATE_MACHINE
BOOST_LOG_TRIVIAL(debug) << "filled " << em->toString(); 
#endif

try {
  em->setEventNo(eventNumbers_.at(em->getOrderId()) + 1);
  if (!em->getRemainingSize())
    eventNumbers_.erase(em->getOrderId());
  else
    eventNumbers_[em->getOrderId()] = em->getEventNo();
  output_.push_back(std::move(received_));
} catch (const std::out_of_range &) {
  received_.release();
}
return true;
!!!723078.cpp!!!	getHandlerName() : string
return "EventNumberGenerator";
