class Feeder
!!!1300102.cpp!!!	Feeder()
  _current_state = 0;
!!!1319430.cpp!!!	Feeder(inout ioc : io_context, in product : string)
d_->product_ = product;
d_->ioc_ = ioc;
d_->strand_ = std::make_unique<boost::asio::io_context::strand>(*ioc);
d_->timer_ = std::make_unique<boost::asio::deadline_timer>(*ioc);

using namespace boost::property_tree;
d_->channels_.put("channel","live_orders_"+product);
_machine_name = "Bitstamp Feeder - ";
!!!1300358.cpp!!!	create() : bool
if (_current_state == 0)
  (_current_state = &(*this)._feeder_state)->create(*this);
return (_current_state != 0);
!!!1301126.cpp!!!	doActivity() : void
  _current_state->_do(*this);
!!!1301254.cpp!!!	_set_currentState(inout st : Feeder::AnyState) : void
  _current_state = &st;
!!!1301382.cpp!!!	_final() : void
  _current_state = 0;
Feeder &stm {*this};
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "final state reached";
#endif
!!!1315334.cpp!!!	success() : bool
  if (_current_state != 0) {
 #ifdef VERBOSE_STATE_MACHINE
Feeder & stm {*this};
 #endif
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "fire trigger success";
#endif
_current_state->success(*this);
  }
  return (_current_state != 0);
!!!1316998.cpp!!!	failure() : bool
  if (_current_state != 0) {
 #ifdef VERBOSE_STATE_MACHINE
Feeder & stm {*this};
 #endif
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "fire trigger failure";
#endif
_current_state->failure(*this);
  }
  return (_current_state != 0);
!!!1319302.cpp!!!	registerHandlers(in s : SuccessHandler, in f : FailureHandler, in r : ReceivedHandler) : void
d_->fh_ = f;
d_->sh_ = s;
d_->rh_ = r;

!!!1320070.cpp!!!	exhausted() : bool
  if (_current_state != 0) {
 #ifdef VERBOSE_STATE_MACHINE
Feeder & stm {*this};
 #endif
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "fire trigger exhausted";
#endif
_current_state->exhausted(*this);
  }
  return (_current_state != 0);
