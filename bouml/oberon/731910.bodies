class Output_State
!!!963462.cpp!!!	message(inout stm : Coinbase) : void
  {
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : execute activity of transition message" << std::endl;
#endif
#ifdef VERBOSE_STATE_MACHINE
std::cout << "Seq no=" << stm.last_seq_number_ << "\n";
#endif
boost::property_tree::write_json(*stm.f_, *stm.tree_, false);
stm.ws_->async_read(stm.buffer_,
                    boost::asio::bind_executor(
                        *stm.rtc_, [&stm](const boost::system::error_code &ec,
                                          std::size_t bytes_transferred) {
                          boost::ignore_unused(bytes_transferred);
                          stm.dispatchJson(ec);
                        }));
  }
!!!963590.cpp!!!	_upper(inout stm : Coinbase) : Coinbase::AnyState
  return &stm._coinbase_state._engage_state._subscribed_state;
!!!1018118.cpp!!!	create(inout stm : Coinbase) : void
	_doentry(stm);
!!!1018246.cpp!!!	_doentry(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
  std::cout << "DEBUG : execute entry behavior of .Coinbase.Engage.Subscribed.Output" << std::endl;
#endif
stm.messages_.erase(stm.messages_.begin());
for (auto &message: stm.messages_)
  boost::property_tree::write_json(*stm.f_, *message, false);

