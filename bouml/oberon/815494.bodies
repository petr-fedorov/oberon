class Failed_State
!!!1111430.cpp!!!	timeout(inout stm : CoinbaseReceiver) : void
  {
  }
!!!1111558.cpp!!!	failure(inout stm : CoinbaseReceiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbasereceiver_state._engage_state._subscribed_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .CoinbaseReceiver.Engage.Subscribed";
#endif
    stm._coinbasereceiver_state._engage_state._subscribed_state._junction1(stm);
  }
!!!1111686.cpp!!!	message(inout stm : CoinbaseReceiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbasereceiver_state._engage_state._subscribed_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .CoinbaseReceiver.Engage.Subscribed";
#endif
    stm._coinbasereceiver_state._engage_state._subscribed_state._junction1(stm);
  }
!!!1111814.cpp!!!	heartbeat(inout stm : CoinbaseReceiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbasereceiver_state._engage_state._subscribed_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .CoinbaseReceiver.Engage.Subscribed";
#endif
    stm._coinbasereceiver_state._engage_state._subscribed_state._junction1(stm);
  }
!!!1111942.cpp!!!	success(inout stm : CoinbaseReceiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbasereceiver_state._engage_state._subscribed_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .CoinbaseReceiver.Engage.Subscribed";
#endif
    stm._coinbasereceiver_state._engage_state._subscribed_state._junction1(stm);
  }
!!!1112070.cpp!!!	_upper(inout stm : CoinbaseReceiver) : CoinbaseReceiver::AnyState
  return &stm._coinbasereceiver_state._engage_state._subscribed_state;
