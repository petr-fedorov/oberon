class Snapshot_State
!!!963718.cpp!!!	create(inout stm : Coinbase) : void
  {
    stm._set_currentState(stm._coinbase_state._engage_state._subscribed_state._snapshot_state._resolve_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase.Engage.Subscribed.Snapshot.Resolve" << std::endl;
#endif
    stm._coinbase_state._engage_state._subscribed_state._snapshot_state._resolve_state.create(stm);
  }
!!!964870.cpp!!!	message(inout stm : Coinbase) : void
  {
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : execute activity of transition queue_message" << std::endl;
#endif
stm.messages_.push_back(std::move(stm.tree_));
std::cout << "Seq no: " << stm.last_seq_number_ << " Queue size: " << stm.messages_.size() << "\n";
stm.ws_->async_read(stm.buffer_, [&stm](const boost::system::error_code &ec,
                                std::size_t bytes_transferred) {
  boost::ignore_unused(bytes_transferred);
  stm.dispatchJson(ec);
});

  }
!!!964998.cpp!!!	_upper(inout stm : Coinbase) : Coinbase::AnyState
  return &stm._coinbase_state._engage_state._subscribed_state;
!!!983942.cpp!!!	_completion(inout stm : Coinbase) : bool
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._coinbase_state._engage_state._subscribed_state._snapshot_state._doexit(stm);
    stm._set_currentState(stm._coinbase_state._engage_state._subscribed_state._output_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase.Engage.Subscribed.Output" << std::endl;
#endif
    stm._coinbase_state._engage_state._subscribed_state._output_state.create(stm);
    return (bool) 1;
  }
!!!997254.cpp!!!	_doexit(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
  std::cout << "DEBUG : execute exit behavior of .Coinbase.Engage.Subscribed.Snapshot" << std::endl;
#endif
stm.https_->next_layer().shutdown(boost::asio::ip::tcp::socket::shutdown_both);
stm.https_->next_layer().close();
!!!1028998.cpp!!!	failure(inout stm : Coinbase) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._coinbase_state._engage_state._subscribed_state._snapshot_state._doexit(stm);
    stm._set_currentState(stm._coinbase_state._engage_state._subscribed_state._failed_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase.Engage.Subscribed.Failed" << std::endl;
#endif
  }
!!!1030150.cpp!!!	timeout(inout stm : Coinbase) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbase_state._engage_state._subscribed_state._snapshot_state._failed_state);
#ifdef VERBOSE_STATE_MACHINE
    std::cout << "DEBUG : current state is now .Coinbase.Engage.Subscribed.Snapshot.Failed" << std::endl;
#endif
  }
