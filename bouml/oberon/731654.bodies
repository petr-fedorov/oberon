class Resolve_State
!!!962822.cpp!!!	create(inout stm : Coinbase) : void
	_doentry(stm);
!!!962950.cpp!!!	_doentry(inout stm : Coinbase) : void
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute entry behavior of .Coinbase.Engage.Initialize.Resolve";
#endif
stm.resolver_->async_resolve(
    stm.host_, stm.port_,
    boost::asio::bind_executor(
        *stm.rtc_,
        [&stm](const boost::system::error_code &ec,
               boost::asio::ip::tcp::resolver::results_type results) {
          if (ec) {
            stm.ec_ = ec;
            stm.error_message_ = ec.message();
#ifdef DEBUG
            BOOST_LOG_TRIVIAL(debug) << "Can't resolve!";
#endif
            stm.failure();
          } else {
            stm.results_ = results;
            stm.success();
          }
        }));
!!!963078.cpp!!!	_upper(inout stm : Coinbase) : Coinbase::AnyState
  return &stm._coinbase_state._engage_state._initialize_state;
!!!1027846.cpp!!!	success(inout stm : Coinbase) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._coinbase_state._engage_state._initialize_state._connect_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .Coinbase.Engage.Initialize.Connect";
#endif
    stm._coinbase_state._engage_state._initialize_state._connect_state.create(stm);
  }
