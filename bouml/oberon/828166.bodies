class Handshake_Websocket_State
!!!1155078.cpp!!!	success(inout stm : Receiver) : void
  {
    for(auto s = stm._current_state; s != this && s; s = s->_upper(stm)) s->_doexit(stm);
    stm._set_currentState(stm._receiver_state._engage_state._initialize_state._subscribe_state);
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "current state is now .Receiver.Engage.Initialize.Subscribe";
#endif
    stm._receiver_state._engage_state._initialize_state._subscribe_state.create(stm);
  }
!!!1155206.cpp!!!	create(inout stm : Receiver) : void
	_doentry(stm);
!!!1155334.cpp!!!	_doentry(inout stm : Receiver) : void
#ifdef VERBOSE_STATE_MACHINE
   BOOST_LOG_TRIVIAL(debug) <<  stm._machine_name << "execute entry behavior of .Receiver.Engage.Initialize.Handshake Websocket";
#endif
stm.ws_->async_handshake(
    stm.host_, stm.target_,
    boost::asio::bind_executor(*stm.strand_,
                               [&stm](const boost::system::error_code &ec) {
                                 if (ec) {
                                   stm.ec_ = ec;
                                   stm.error_message_ = ec.message();
                                   stm.failure();
                                 } else {
                                   stm.success();
                                 }
                               }));
!!!1155462.cpp!!!	_upper(inout stm : Receiver) : Receiver::AnyState
  return &stm._receiver_state._engage_state._initialize_state;
